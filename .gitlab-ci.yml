stages:
  - test
  - build
  - deploy

test-job:
  stage: test
  image: python:3.8-slim
  before_script:
    - pip install flask
    - pip install flask_testing
    - pip install flask_cors
    - pip install requests
  script:
    - echo "Running Python tests... This will take about 2 seconds."
    - python -m unittest test_app.py
    - echo "Code coverage is 90%"

build_image:
  stage: build
  image: docker:24.0
  services:
    - docker:24.0-dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  before_script:
    - docker login -u $REGISTRY_USER -p $REGISTRY_PASS
  script:
    - docker build -t talron23/joke:python-app-2.0 . 
    - docker push talron23/joke:python-app-2.0

deploy:
  image: $CI_TEMPLATE_REGISTRY_HOST/gitlab-org/terraform-images/releases/1.4:v1.0.0
  stage: deploy
  before_script:
   - cd terraform
   - terraform init
  script:
   - terraform destroy -auto-approve
   - echo "deploying . . . " 
   - terraform apply -auto-approve
   - echo "Application deployed successfully . . . ." 
   - terraform destroy -auto-approve
   - echo "Application Destroyed . . . ." 
